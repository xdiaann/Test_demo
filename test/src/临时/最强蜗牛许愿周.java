package 临时;

import org.junit.Test;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * @author MR.Z
 * @date 2020/8/26 1:25
 */
public class 最强蜗牛许愿周 {
    //需手动设置数据
    int 目前活动剩余天数 = 7;

    int 许愿币_目前拥有 = 200;

    int 奥术水晶_目前拥有 = 0;

    //以下是固定数据 不需要修改
    int 许愿币_每日礼包_1 = 1;
    int 许愿币_每日贩售机_1 = 1;
    int 许愿币_许愿40次奖励_2 = 2;
    int 许愿币_周礼包_2 = 2;
    int 许愿币_限时特卖_5_需2400白 = 5;
    int 许愿币_博物馆每三天_3_需360勋章 = 3;
    int 许愿币_地缝商人每三天_1_需若干地缝币 = 1;

    int 奥术水晶_每日礼包_100 = 100;
    int 奥术水晶_周礼包_100 = 100;
    int 奥术水晶_阴阳鱼_250 = 250;
    int 奥术水晶_消耗蓝色碎片_750=750;
    int 奥术水晶_消耗紫色碎片_900=900;
    int 奥术水晶_消耗橙色碎片_900=900;
    List<Integer> 奥术水晶_许愿奖励List = new ArrayList<>(Arrays.asList(120, 120, 150, 150, 180, 180, 0, 200));


    @Test
    public void test01() {
        int 总计可获得许愿币 = 总计可获得许愿币();
        System.out.println("总计可获得许愿币" + 总计可获得许愿币);
        //目前最大支持249枚许愿币
        int 总计可获得奥术水晶 = 总计可获得奥术水晶(总计可获得许愿币);
        System.out.println("总计可获得奥术水晶" + 总计可获得奥术水晶);

        int i = 500 + 1000 + 1500 + 3000;
        System.out.println("第四档合计需要奥术水晶" + i);
        System.out.println("第四档还需要奥术水晶" + (i - 总计可获得奥术水晶));

    }

    public int 总计可获得许愿币() {
        if (目前活动剩余天数 > 3) {
            许愿币_博物馆每三天_3_需360勋章 = 许愿币_博物馆每三天_3_需360勋章 * 2;
            许愿币_地缝商人每三天_1_需若干地缝币 = 许愿币_地缝商人每三天_1_需若干地缝币 * 2;
        }

        int 许愿币 = 许愿币_目前拥有 + 许愿币_每日礼包_1 * 目前活动剩余天数 + 许愿币_每日贩售机_1 * 目前活动剩余天数 + 许愿币_周礼包_2+
                许愿币_限时特卖_5_需2400白 + 许愿币_博物馆每三天_3_需360勋章 + 许愿币_地缝商人每三天_1_需若干地缝币;

        if (许愿币 > 120) {
            许愿币 = 许愿币_许愿40次奖励_2 * 2 + 许愿币;
        } else {
            许愿币 = 许愿币_许愿40次奖励_2 + 许愿币;
        }
        return 许愿币;
    }

    public int 总计可获得奥术水晶(int 总计可获得许愿币) {
        int 可许愿次数 = 总计可获得许愿币 / 10;
        int 奥术水晶_许愿获得 = 0;
        for (int i = 1; i <= 可许愿次数; i++) {
            //数组长度为0-7  i为第几次许愿
            if (i > 8 && i <= 16) {
                奥术水晶_许愿获得 += 奥术水晶_许愿奖励List.get(i - 8 - 1);
            } else if (i > 16) {
                奥术水晶_许愿获得 += 奥术水晶_许愿奖励List.get(i - 16 - 1);
            } else {
                奥术水晶_许愿获得 += 奥术水晶_许愿奖励List.get(i - 1);
            }
        }

        System.out.println("可许愿次数" + 可许愿次数 + " 许愿总计可获得水晶" + 奥术水晶_许愿获得);
        System.out.println("===============");
        int 奥术水晶 = 奥术水晶_目前拥有 + 奥术水晶_每日礼包_100 * 目前活动剩余天数 +奥术水晶_周礼包_100+ 奥术水晶_阴阳鱼_250
                + 奥术水晶_消耗橙色碎片_900 + 奥术水晶_消耗紫色碎片_900 + 奥术水晶_消耗蓝色碎片_750 + 奥术水晶_许愿获得;
        return 奥术水晶;
    }
}
