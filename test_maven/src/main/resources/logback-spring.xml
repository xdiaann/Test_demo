<!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<configuration>-->
<!--    &lt;!&ndash; 彩色日志 &ndash;&gt;-->
<!--    &lt;!&ndash; 彩色日志依赖的渲染类 &ndash;&gt;-->
<!--    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />-->
<!--    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />-->
<!--    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />-->
<!--    &lt;!&ndash; 彩色日志格式 &ndash;&gt;-->
<!--    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%logger){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />-->
<!--    &lt;!&ndash;包名输出缩进对齐&ndash;&gt;-->
<!--    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(-&#45;&#45;){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}" />-->
<!--    <contextName>hanpu</contextName>-->

<!--    &lt;!&ndash;文件夹在当前项目磁盘根目录&ndash;&gt;-->
<!--    &lt;!&ndash;<property name="LOG_PATH" value="/wongH_log" />&ndash;&gt;-->
<!--    &lt;!&ndash;设置系统日志目录&ndash;&gt;-->
<!--    <property name="APPDIR" value="logs" />-->

<!--    &lt;!&ndash;  日志记录器，日期滚动记录-->
<!--            ERROR 级别-->
<!--     &ndash;&gt;-->
<!--    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
<!--        <file>${APPDIR}/lms_log_error.log</file>-->
<!--        &lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 归档的日志文件的路径，例如今天是1992-11-06日志，当前写的日志文件路径为file节点指定，-->
<!--            可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
<!--            而1992-11-06的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
<!--            <fileNamePattern>${APPDIR}/error/lms_log-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过10MB，若超过10MB，日志文件会以索引0开始，-->
<!--            命名日志文件，例如log-error-1992-11-06.0.log &ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>10MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
<!--        <append>true</append>-->
<!--        &lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level -&#45;&#45; [%thread] %logger Line:%-3L - %msg%n</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 此日志文件记录error级别的 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>error</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->


<!--    &lt;!&ndash; 日志记录器，日期滚动记录-->
<!--            WARN  级别-->
<!--     &ndash;&gt;-->
<!--    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
<!--        <file>${APPDIR}/lms_log_warn.log</file>-->
<!--        &lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 归档的日志文件的路径，例如今天1992-11-06日志，当前写的日志文件路径为file节点指定，-->
<!--            可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
<!--            而1992-11-06的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
<!--            <fileNamePattern>${APPDIR}/warn/lms_log-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过10MB，若超过10MB，日志文件会以索引0开始，-->
<!--            命名日志文件，例如log-warn-1992-11-06.0.log &ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>10MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
<!--        <append>true</append>-->
<!--        &lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level -&#45;&#45; [%thread] %logger Line:%-3L - %msg%n</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 此日志文件只记录warn级别的 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>warn</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->


<!--    &lt;!&ndash; 日志记录器，日期滚动记录-->
<!--            INFO  级别-->
<!--    &ndash;&gt;-->
<!--    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
<!--        <file>${APPDIR}/lms_log_info.log</file>-->
<!--        &lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 归档的日志文件的路径，例如今天是1992-11-06日志，当前写的日志文件路径为file节点指定，-->
<!--            可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
<!--            而1992-11-06的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
<!--            <fileNamePattern>${APPDIR}/info/lms_log-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过10MB，若超过10MB，日志文件会以索引0开始，-->
<!--            命名日志文件，例如log-info-1992-11-06.0.log &ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>10MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
<!--        <append>true</append>-->
<!--        &lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level -&#45;&#45; [%thread] %logger Line:%-3L - %msg%n</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 此日志文件只记录info级别的 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>info</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->


<!--    &lt;!&ndash; 日志记录器，日期滚动记录-->
<!--            DEBUG  级别-->
<!--    &ndash;&gt;-->
<!--    <appender name="DEBUG" class="ch.qos.logback.core.rolling.RollingFileAppender">-->
<!--        &lt;!&ndash; 正在记录的日志文件的路径及文件名 &ndash;&gt;-->
<!--        <file>${APPDIR}/lms_log_debug.log</file>-->
<!--        &lt;!&ndash; 日志记录器的滚动策略，按日期，按大小记录 &ndash;&gt;-->
<!--        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">-->
<!--            &lt;!&ndash; 归档的日志文件的路径，例如今天是1992-11-06日志，当前写的日志文件路径为file节点指定，-->
<!--            可以将此文件与file指定文件路径设置为不同路径，从而将当前日志文件或归档日志文件置不同的目录。-->
<!--            而1992-11-06的日志文件在由fileNamePattern指定。%d{yyyy-MM-dd}指定日期格式，%i指定索引 &ndash;&gt;-->
<!--            <fileNamePattern>${APPDIR}/debug/lms_log-debug-%d{yyyy-MM-dd}.%i.log</fileNamePattern>-->
<!--            &lt;!&ndash; 除按日志记录之外，还配置了日志文件不能超过10MB，若超过10MB，日志文件会以索引0开始，-->
<!--            命名日志文件，例如log-debug-1992-11-06.0.log &ndash;&gt;-->
<!--            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">-->
<!--                <maxFileSize>10MB</maxFileSize>-->
<!--            </timeBasedFileNamingAndTriggeringPolicy>-->
<!--        </rollingPolicy>-->
<!--        &lt;!&ndash; 追加方式记录日志 &ndash;&gt;-->
<!--        <append>true</append>-->
<!--        &lt;!&ndash; 日志文件的格式 &ndash;&gt;-->
<!--        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">-->
<!--            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level - [%thread] %logger Line:%-3L - %msg%n</pattern>-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash; 此日志文件只记录debug级别的 &ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>debug</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
<!--    </appender>-->

<!--    &lt;!&ndash; ConsoleAppender 控制台输出日志 &ndash;&gt;-->
<!--    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">-->
<!--        &lt;!&ndash;encoder 默认配置为PatternLayoutEncoder&ndash;&gt;-->
<!--        <encoder>-->
<!--            <pattern>${CONSOLE_LOG_PATTERN}</pattern>-->
<!--            &lt;!&ndash;<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level - [%thread] %logger Line:%-3L - %msg%n</pattern>&ndash;&gt;-->
<!--            <charset>utf-8</charset>-->
<!--        </encoder>-->
<!--        &lt;!&ndash;此日志appender是为开发使用，只配置最底级别，控制台输出的日志级别是大于或等于此级别的日志信息&ndash;&gt;-->
<!--        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--            <level>debug</level>-->
<!--        </filter>-->
<!--    </appender>-->

<!--    &lt;!&ndash; FrameworkServlet日志&ndash;&gt;-->
<!--    <logger name="org.springframework" level="WARN" />-->

<!--    <logger name="org.hibernate.SQL" level="WARN" />-->

<!--    &lt;!&ndash; mybatis日志打印&ndash;&gt;-->
<!--    <logger name="org.apache.ibatis" level="WARN" />-->
<!--    <logger name="java.sql" level="WARN" />-->
<!--    <logger name="org.apache.shiro" level="WARN" />-->
<!--    <logger name="com.github.binarywang" level="DEBUG" />-->
<!--    <logger name="org.flowable.common" level="ERROR" />-->

<!--    &lt;!&ndash;  项目 mapper 路径-->
<!--            console控制台显示sql语句：STDOUT.filter.level -> debug级别-->
<!--    &ndash;&gt;-->
<!--    <logger name="com.hanpu.lms" level="DEBUG"></logger>-->
<!--    <logger name="org.flowable" level="INFO"></logger>-->

<!--    &lt;!&ndash; 生产环境下，将此级别配置为适合的级别，以免日志文件太多或影响程序性能 &ndash;&gt;-->
<!--    <root level="INFO">-->
<!--        <appender-ref ref="ERROR" />-->
<!--        <appender-ref ref="WARN" />-->
<!--        <appender-ref ref="INFO" />-->
<!--        <appender-ref ref="DEBUG" />-->
<!--        &lt;!&ndash; 生产环境将请stdout去掉 &ndash;&gt;-->
<!--        <appender-ref ref="STDOUT" />-->
<!--    </root>-->

<!--</configuration>-->